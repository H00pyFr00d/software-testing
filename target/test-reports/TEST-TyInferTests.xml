<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="marvin" name="TyInferTests" tests="71" errors="0" failures="0" skipped="0" time="0.095" timestamp="2025-01-08T13:07:11">
          <properties>
      <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/><property name="java.specification.version" value="11"/><property name="sun.cpu.isalist" value=""/><property name="sun.jnu.encoding" value="UTF-8"/><property name="sun.arch.data.model" value="64"/><property name="java.vendor.url" value="https://adoptium.net/"/><property name="sun.boot.library.path" value="/home/h00pyfr00d/.cache/coursier/arc/https/github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.24%252B8/OpenJDK11U-jdk_x64_linux_hotspot_11.0.24_8.tar.gz/jdk-11.0.24+8/lib"/><property name="sun.java.command" value="/home/h00pyfr00d/.cache/coursier/arc/https/github.com/sbt/sbt/releases/download/v1.10.6/sbt-1.10.6.zip/sbt/bin/sbt-launch.jar clean coverage test coverageReport"/><property name="jdk.debug" value="release"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2024-07-16"/><property name="java.home" value="/home/h00pyfr00d/.cache/coursier/arc/https/github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.24%252B8/OpenJDK11U-jdk_x64_linux_hotspot_11.0.24_8.tar.gz/jdk-11.0.24+8"/><property name="file.separator" value="/"/><property name="java.vm.compressedOopsMode" value="32-bit"/><property name="line.separator" value="
"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="11.0.24+8"/><property name="user.name" value="h00pyfr00d"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="UTF-8"/><property name="jnidispatch.path" value="/home/h00pyfr00d/.cache/JNA/temp/jna9849850774701915089.tmp"/><property name="java.vendor.version" value="Temurin-11.0.24+8"/><property name="jna.loaded" value="true"/><property name="java.io.tmpdir" value="/tmp"/><property name="java.version" value="11.0.24"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/><property name="sun.os.patch.level" value="unknown"/><property name="java.library.path" value="/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/><property name="java.vendor" value="Eclipse Adoptium"/><property name="java.specification.maintenance.version" value="2"/><property name="scala.ext.dirs" value="/home/h00pyfr00d/.sbt/1.0/java9-rt-ext-eclipse_adoptium_11_0_24"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="sun.desktop" value="gnome"/><property name="java.class.path" value="/home/h00pyfr00d/.cache/coursier/arc/https/github.com/sbt/sbt/releases/download/v1.10.6/sbt-1.10.6.zip/sbt/bin/sbt-launch.jar"/><property name="java.vm.vendor" value="Eclipse Adoptium"/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="Europe/London"/><property name="os.name" value="Linux"/><property name="java.vm.specification.version" value="11"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="user.country" value="GB"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="/home/h00pyfr00d"/><property name="user.language" value="en"/><property name="sbt.script" value="/home/h00pyfr00d/.cache/coursier/arc/https/github.com/sbt/sbt/releases/download/v1.10.6/sbt-1.10.6.zip/sbt/bin/sbt"/><property name="sbt.ipcsocket.tmpdir" value="/run/user/1000/.sbte566036d/ipcsocket"/><property name="swoval.tmpdir" value="/run/user/1000/.sbte566036d/swoval"/><property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/><property name="jline.esc.timeout" value="0"/><property name="path.separator" value=":"/><property name="os.version" value="6.8.0-51-generic"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="jna.platform.library.path" value="/usr/lib/x86_64-linux-gnu:/lib/x86_64-linux-gnu:/usr/lib64:/lib64:/usr/lib:/lib:/lib/i386-linux-gnu:/usr/lib/x86_64-linux-gnu/libfakeroot"/><property name="java.vendor.url.bug" value="https://github.com/adoptium/adoptium-support/issues"/><property name="user.dir" value="/home/h00pyfr00d/Documents/software-testing"/><property name="os.arch" value="amd64"/><property name="java.vm.info" value="mixed mode"/><property name="java.vm.version" value="11.0.24+8"/><property name="java.class.version" value="55.0"/>
    </properties>
          <testcase classname="TyInferTests" name="Value" time="0.043">
                      
                    </testcase><testcase classname="TyInferTests" name="Unit" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="Num" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Plus" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Minus" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Times" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="Bool" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="Eq" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Eq (non-equality type)" time="0.003">
                      
                    </testcase><testcase classname="TyInferTests" name="Less" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="IfThenElse" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="String" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="Length" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="Index" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Concat" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="Var (empty environment)" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="Var (non-empty environment)" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="Let" time="0.003">
                      
                    </testcase><testcase classname="TyInferTests" name="Lambda" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Apply" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Apply (non-function)" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Rec" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="Anno" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="Pair" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="First" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="First (non-pair)" time="0.004">
                      
                    </testcase><testcase classname="TyInferTests" name="Second" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="Second (non-pair)" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="Record" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="Proj" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="Proj (not in record)" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Proj (non-record)" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Variant" time="0.003">
                      
                    </testcase><testcase classname="TyInferTests" name="Case" time="0.003">
                      
                    </testcase><testcase classname="TyInferTests" name="Case (label not in case clause)" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Case (label not in variant)" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Case (non-variant)" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Bag" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Bag (empty)" time="0.002">
                      
                    </testcase><testcase classname="TyInferTests" name="FlatMap" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="FlatMap (flatmap mismatch)" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="FlatMap (expects bag)" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="FlatMap (expects function type)" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="When" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="When (expects bag)" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Sum" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Sum (expects bag type)" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Diff" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Diff (expects bags of equality types)" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Diff (expects bag type)" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="Comprehension (empty)" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="Comprehension w/ Bind" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="Comprehension w/ Bind (expects bag)" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="Comprehension w/ Guard" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="Comprehension w/ CLet" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Comprehension (expected comprehension clause)" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="Count" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Count (expected equality type)" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="Count (expects bag)" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="LetPair" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="LetPair (expected pair)" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="LetFun" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="LetFun (expected function type)" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="LetRec" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="LetRec (expected function type)" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="LetRecord" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="LetRecord (label not found in record type)" time="0.0">
                      
                    </testcase><testcase classname="TyInferTests" name="LetRecord (expected record)" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Bind" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="Guard" time="0.001">
                      
                    </testcase><testcase classname="TyInferTests" name="CLet" time="0.0">
                      
                    </testcase>
          <system-out><![CDATA[]]></system-out>
          <system-err><![CDATA[]]></system-err>
        </testsuite>